{"ast":null,"code":"import _createClass from\"/home/fritz/Projects/AustinConservationProject/acp-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/fritz/Projects/AustinConservationProject/acp-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/fritz/Projects/AustinConservationProject/acp-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/fritz/Projects/AustinConservationProject/acp-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _classCallCheck from\"/home/fritz/Projects/AustinConservationProject/acp-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component}from\"react\";import Calendar from'react-calendar';import Tooltip from'react-bootstrap/Tooltip';import OverlayTrigger from'react-bootstrap/OverlayTrigger';import Modal from'react-bootstrap/Modal';import'./css/Calendar.css';import'./css/Events.css';/*\nclass to encapsulate events, is passed between calendar and EventTicker\nto populate Modals\n*/var Event=function Event(name,description,day,month,year){_classCallCheck(this,Event);this.name=name;this.date=new Date(year,month-1,day);this.description=description;};/*\ncomponent to be displayed on a calendar tile\n*/var EventTicker=/*#__PURE__*/function(_Component){_inherits(EventTicker,_Component);var _super=_createSuper(EventTicker);function EventTicker(props){var _this;_classCallCheck(this,EventTicker);_this=_super.call(this,props);_this.state={event_name:null,event_date:null,event_description:null,show_modal:false};_this.handleOpen=_this.handleOpen.bind(_assertThisInitialized(_this));_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));return _this;}_createClass(EventTicker,[{key:\"handleOpen\",value:function handleOpen(event){this.setState({show_modal:true});}},{key:\"handleClose\",value:function handleClose(){this.setState({show_modal:false});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"inline-block\"},children:[/*#__PURE__*/_jsxs(Modal,{className:\"nominate-modal\",size:\"lg\",show:this.state.show_modal,onHide:this.handleClose,centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{className:\"text-24pt\",closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:this.props.event.name})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"body-16pt\",children:this.props.event.description})]}),/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"right\",delay:{show:100,hide:0},overlay:/*#__PURE__*/_jsx(Tooltip,{id:\"button-tooltip\",children:this.props.event.name}),children:/*#__PURE__*/_jsx(\"div\",{className:\"dot\",onClick:function onClick(){return _this2.handleOpen(_this2.props.event);}})})]});}}]);return EventTicker;}(Component);var EventsComponent=/*#__PURE__*/function(_Component2){_inherits(EventsComponent,_Component2);var _super2=_createSuper(EventsComponent);function EventsComponent(){_classCallCheck(this,EventsComponent);return _super2.apply(this,arguments);}_createClass(EventsComponent,[{key:\"isEventDate\",/*\n  returns components corresponding to a given date, null otherwise\n  */value:function isEventDate(date){var s_e=new Event(\"MyEvent\",\"Description\",14,1,2021);console.log(s_e.date);if(date.getTime()===s_e.date.getTime()){return[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(EventTicker,{event:s_e}),/*#__PURE__*/_jsx(EventTicker,{event:s_e})];}else{return[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"dot\",style:{backgroundColor:\"#00000000\"}})];}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-24pt page-title\",children:\"Events\"}),/*#__PURE__*/_jsx(\"div\",{className:\"blue-yellow-bar\"}),/*#__PURE__*/_jsx(Calendar,{style:{margin:\"auto\"},tileContent:function tileContent(_ref){var activeStartDate=_ref.activeStartDate,date=_ref.date,view=_ref.view;return _this3.isEventDate(date);},onDrillDown:function onDrillDown(_ref2){var activeStartDate=_ref2.activeStartDate,view=_ref2.view;return null;},onDrillUp:function onDrillUp(_ref3){var activeStartDate=_ref3.activeStartDate,view=_ref3.view;return null;}})]});}}]);return EventsComponent;}(Component);export default EventsComponent;","map":{"version":3,"sources":["/home/fritz/Projects/AustinConservationProject/acp-app/src/EventsComponent.js"],"names":["React","Component","Calendar","Tooltip","OverlayTrigger","Modal","Event","name","description","day","month","year","date","Date","EventTicker","props","state","event_name","event_date","event_description","show_modal","handleOpen","bind","handleClose","event","setState","display","show","hide","EventsComponent","s_e","console","log","getTime","backgroundColor","margin","activeStartDate","view","isEventDate"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport Calendar from 'react-calendar';\n\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Modal from 'react-bootstrap/Modal';\n\nimport './css/Calendar.css';\nimport './css/Events.css';\n\n/*\nclass to encapsulate events, is passed between calendar and EventTicker\nto populate Modals\n*/\nclass Event {\n  constructor(name, description, day, month, year){\n    this.name = name;\n    this.date = new Date(year, month-1, day);\n    this.description = description;\n  }\n}\n\n/*\ncomponent to be displayed on a calendar tile\n*/\nclass EventTicker extends Component{\n  constructor(props){\n    super(props)\n\n    this.state = {\n      event_name:null,\n      event_date:null,\n      event_description:null,\n      show_modal:false\n    }\n\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleOpen(event){\n    this.setState({\n      show_modal:true\n    })\n  }\n\n  handleClose(){\n    this.setState({\n      show_modal:false\n    })\n  }\n\n  render(){\n    return(\n      <div style={{display:\"inline-block\"}}>\n        <Modal className=\"nominate-modal\" size=\"lg\" show={this.state.show_modal} onHide={this.handleClose} centered>\n          <Modal.Header className=\"text-24pt\" closeButton>\n            <Modal.Title>{this.props.event.name}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"body-16pt\">\n            {this.props.event.description}\n          </Modal.Body>\n        </Modal>\n\n        <OverlayTrigger\n          placement=\"right\"\n          delay={{ show: 100, hide: 0 }}\n          overlay={\n                   <Tooltip id=\"button-tooltip\">\n                     {this.props.event.name}\n                   </Tooltip>\n                 }\n        >\n          <div className=\"dot\" onClick={()=>this.handleOpen(this.props.event)}>\n          </div>\n        </OverlayTrigger>\n      </div>\n    )\n  }\n}\n\nclass EventsComponent extends Component{\n\n  /*\n  returns components corresponding to a given date, null otherwise\n  */\n  isEventDate(date){\n    var s_e = new Event(\"MyEvent\", \"Description\", 14, 1, 2021)\n\n    console.log(s_e.date)\n\n    if(date.getTime() === s_e.date.getTime()){\n      return [<br/>, <EventTicker event={s_e}/>, <EventTicker event={s_e}/>]\n    }else {\n      return [<br/>, <div className=\"dot\" style={{backgroundColor:\"#00000000\"}}/>]\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <p className=\"text-24pt page-title\">\n           Events\n        </p>\n        <div className=\"blue-yellow-bar\"/>\n        <Calendar\n          style={{margin:\"auto\"}}\n          tileContent={({ activeStartDate, date, view }) => this.isEventDate(date)}\n          onDrillDown={({ activeStartDate, view }) => null}\n          onDrillUp={({ activeStartDate, view })=>null}/>\n      </div>\n    )\n  }\n}\n\nexport default EventsComponent;\n"]},"metadata":{},"sourceType":"module"}